{"version":3,"sources":["components/EditableDiv/index.js","components/SceneHeading/index.js","components/Action/index.js","components/Charector/index.js","constants.js","components/Paranthetical/index.js","components/Dialogue/index.js","components/Transition/index.js","components/ElementOptions/index.js","containers/Elements/index.js","containers/Board/index.js","containers/App/index.js","serviceWorker.js","index.js"],"names":["EditableDiv","props","contentEditable","ref","elementRef","SceneHeading","id","onKeyDown","rest","className","sceneNumber","placeholder","Action","Charector","Paranthetical","Dialogue","Transition","ElementOptions","show","handleClose","addSceneHeading","addAction","insChar","addDialogue","addParanthetical","addTransition","onSelect","selectedCallBack","Menu","open","onClose","MenuItem","onClick","Element","type","removeElement","useState","setShow","elementProps","e","content","currentTarget","innerText","trim","split","currentElement","isEnter","key","isBackSpace","addElementAction","isShift","toLowerCase","getAddElementAction","shiftKey","preventDefault","prevState","length","constants","Board","elements","elementsCount","sceneHeading","action","charector","dialogue","paranthetical","transition","elementsList","setElemetsList","setCurrentElement","currentElementRef","useRef","useEffect","focus","document","execCommand","getSelection","collapseToEnd","setElemetsListToState","newEle","prevElList","setFocusedElement","element","commonProps","eleId","newElementsList","filter","el","parantheticals","map","Elements","App","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.567d0d0d.chunk.js","sourcesContent":["import React from 'react';\nimport './style.scss'\nfunction EditableDiv(props) {\nreturn <div contentEditable {...props} ref={props.elementRef}></div>\n}\nexport default EditableDiv;","import React from 'react';\nimport EditableDiv from '../EditableDiv'\nimport './style.scss';\nfunction SceneHeading(props) {\n    const {elementRef, id, onKeyDown, ...rest} = props;\n    return <div className=\"scene-heading\">\n        <span className=\"scene-number\">Scene {props.sceneNumber}: </span>\n        \n        <EditableDiv className=\"int-ext\" placeholder=\"INT/EXT\" elementRef={elementRef} id={`${id}-int_ext`} onKeyDown={onKeyDown}/>\n        <EditableDiv className=\"location\" placeholder=\"LOCATION\" id={`${id}-location`} onKeyDown={onKeyDown} />\n        <EditableDiv className=\"time\" contentEditable={true} placeholder=\"MORNING/NIGHT\" {...rest} onKeyDown={onKeyDown} id={id}></EditableDiv>\n        \n    </div>;\n}\n\nexport default SceneHeading;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Action(props) {\n    return (<div className=\"action\">\n        <EditableDiv placeholder=\"Action\" {...props}/>\n    </div>)\n}\n\nexport default Action;","import React from 'react';\nimport EditableDiv from '../EditableDiv'\nimport './style.scss';\nfunction Charector(props) {\n\n    return <div className=\"charector\">\n        <EditableDiv placeholder=\"Character name\" {...props}/>\n\n        </div>\n}\n\nexport default Charector;"," const CHARECTOR = \"CHARECTOR\";\n const ACTION = \"ACTION\";\n const PARANTHETICAL = \"PARANTHETICAL\";\n const DIALOGUE = \"DIALOGUE\";\n const SCENE_HEADING = \"SCENE_HEADING\"\n const TRANSITION = \"TRANSITION\"\n export default {\n    CHARECTOR,\n    ACTION,\n    PARANTHETICAL,\n    DIALOGUE,\n    SCENE_HEADING,\n    TRANSITION\n }","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Paranthetical(props) {\n\n    return (<div className=\"paranthetical\">\n        <EditableDiv placeholder=\"describe state of charector\" {...props}/>\n    </div>)\n}\nexport default Paranthetical;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Dialogue(props) {\n\n    return (<div className=\"dialogue\">\n        <div className=\"dialogue-container\">\n            <EditableDiv placeholder=\"Dialogue\" {...props}/>\n        </div>\n    </div>)\n}\nexport default Dialogue;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Transition(props) {\n    return <div className=\"transition\">\n        {/* <Select\n          id=\"transition-select\"\n          {...props}\n          ref={props.elementRef}\n        >\n          <MenuItem value={'FADEIN'}>FADE IN</MenuItem>\n          <MenuItem value={'FADEOUT'}>FADE OUT</MenuItem>\n          <MenuItem value={\"CUTTO\"}>CUT TO</MenuItem>\n        </Select> */}\n        <EditableDiv className=\"transition\" contentEditable={true} placeholder=\"FADEIN/FADEOUT/CUTTO\" {...props}></EditableDiv>\n\n    </div>\n}\nexport default Transition","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nfunction ElementOptions(props){\n    const {show, handleClose, addSceneHeading, addAction, insChar, addDialogue, addParanthetical, addTransition} = props;\n    const onSelect = (selectedCallBack) => {\n      selectedCallBack();\n      handleClose();\n    }\n    return <Menu\n    id=\"elements-menu\"\n    open={show}\n    onClose={handleClose}\n  >\n    <MenuItem onClick={() => onSelect(addSceneHeading)} >Scene heading</MenuItem>\n    <MenuItem onClick={() => onSelect(addAction)}>Action</MenuItem>\n    <MenuItem onClick={() => onSelect(insChar)} >Charector</MenuItem>\n    <MenuItem onClick={() => onSelect(addDialogue)} >Dialogue</MenuItem>\n    <MenuItem onClick={() => onSelect(addParanthetical)} >Paranthetical</MenuItem>\n    <MenuItem onClick={() => onSelect(addTransition)} >Transition</MenuItem>\n  </Menu>\n}\nexport default ElementOptions;","import React, {useState} from 'react';\nimport PropTypes from 'prop-types'\nimport './style.scss';\nimport SceneHeading from '../../components/SceneHeading';\nimport Action from '../../components/Action';\nimport Charector from '../../components/Charector';\nimport constants from '../../constants';\nimport Paranthetical from '../../components/Paranthetical';\nimport Dialogue from '../../components/Dialogue';\nimport Transition from '../../components/Transition';\nimport ElementOptions from '../../components/ElementOptions';\nfunction getAddElementAction(key, isShift, props) {\n    const { addAction, addTransition,addDialogue, addParanthetical, insChar, addSceneHeading} = props;\n    const action = isShift && key.toLowerCase();\n    let addElementAction;\n    switch(action) {\n        case 's':\n            addElementAction = addSceneHeading;\n            break;\n        case 'a':\n            addElementAction = addAction;\n            break;\n        case 't':\n            addElementAction = addTransition;\n            break;\n        case 'd':\n            addElementAction = addDialogue;\n            break;\n        case 'p':\n            addElementAction = addParanthetical;\n            break;\n        case 'c':\n            addElementAction = insChar;\n            break;\n        default: \n            addElementAction = null;\n    }\n    return addElementAction;\n}\nfunction Element(props) {\n    const {type, removeElement, id} = props;\n    const [show, setShow] = useState(false);\n    let Element = null; \n    const onKeyDown = (e) => {\n        const content = e.currentTarget.innerText.trim();\n        const [currentElement, eleId, type] = e.currentTarget.id.split('-');\n        const isEnter = e.key === 'Enter';\n        const isBackSpace = e.key === 'Backspace';\n        const addElementAction = getAddElementAction(e.key, e.shiftKey, props);\n        if(addElementAction) {\n            addElementAction();\n            e.preventDefault();\n        } else if(isEnter && e.shiftKey) {\n            setShow((prevState) => !prevState)\n            e.preventDefault();\n        } else if(isBackSpace && !content.length) {\n            if(currentElement !== 'sceneHeading' || (currentElement === 'sceneHeading' && type === 'int_ext')) {\n                removeElement(id)\n                e.preventDefault();\n            }  \n        } else if(isEnter && (currentElement === 'character' || currentElement === \"paranthetical\" || currentElement === \"sceneHeading\")) {\n            e.preventDefault();\n        }\n    }   \n    const elementProps = {onKeyDown}\n    switch(type) {\n        case constants.SCENE_HEADING:\n            Element = SceneHeading;\n            break;\n        case constants.ACTION: \n            Element = Action;\n            break;\n        case constants.CHARECTOR:\n            Element = Charector;\n            break;\n        case constants.PARANTHETICAL:\n            Element = Paranthetical;\n            break;\n        case constants.DIALOGUE:\n            Element = Dialogue;\n            break;\n        case constants.TRANSITION:\n            Element = Transition;\n        default: \n\n    }\n    return <div className=\"element\">\n        <Element {...elementProps} {...props}/>\n        <ElementOptions show={show} {...props} handleClose={() => { setShow(false)}}/>\n    </div>\n    \n}\nElement.propTypes = {\n    onAddElement: PropTypes.func.isRequired,\n}\nexport default Element;","import React, {useState, useEffect, useRef} from 'react';\nimport Elements from '../Elements'\nimport './style.scss';\nimport constants from '../../constants';\nfunction Board(props) {\n    const {elements} = props;\n    const elementsCount = {\n        sceneHeading: 1,\n        action: 0,\n        charector: 0,\n        dialogue: 0,\n        paranthetical: 0,\n        transition: 0,\n    }\n    const [elementsList, setElemetsList] = useState(elements || [{type: constants.SCENE_HEADING, sceneNumber: elementsCount.sceneHeading, id: `sceneHeading-${elementsCount.sceneHeading}`}]);\n    const [currentElement, setCurrentElement] = useState(`sceneHeading-${elementsCount.sceneHeading}`)\n    let currentElementRef = useRef(null)\n\n    useEffect(() => {\n        if(currentElementRef && currentElementRef.focus) {\n            currentElementRef.focus();\n            document.execCommand('selectAll', false, null);\n            // collapse selection to the end\n            document.getSelection().collapseToEnd();\n        }\n    })\n\n    const setElemetsListToState = (newEle) => {\n        setElemetsList(prevElList => [...prevElList, newEle] )\n        setCurrentElement(newEle.id)\n    }\n    const setFocusedElement = element => {\n        currentElementRef = element;\n    }\n    const addParanthetical = function () {\n        elementsCount.parantheticals += 1;\n        setElemetsListToState({type: constants.PARANTHETICAL, id: `paranthetical-${elementsCount.parantheticals}`})\n    }\n    const addTransition = () => {\n        elementsCount.transition += 1;\n        setElemetsListToState({type: constants.TRANSITION, id: `transition-${elementsCount.transition}`})\n    }\n    const addDialogue = () => {\n        elementsCount.dialogue += 1;\n        setElemetsListToState({type: constants.DIALOGUE, id: `dialogue-${elementsCount.dialogue}`})\n    }\n    const insertChar = function() {\n        elementsCount.charector += 1;\n        setElemetsListToState({type: constants.CHARECTOR, id: `character-${elementsCount.charector}`})\n    }\n    const addAction = function() {\n        elementsCount.action += 1;\n        setElemetsListToState({type: constants.ACTION, id: `action-${elementsCount.action}`})\n    }\n    const addSceneHeading = () => {\n        elementsCount.sceneHeading += 1;\n        setElemetsListToState({type: constants.SCENE_HEADING, id: `sceneHeading-${elementsCount.sceneHeading}`, sceneNumber: elementsCount.sceneHeading})\n    }\n    const removeElement = (eleId) => {\n        if(elementsList.length > 1 && eleId){\n            const newElementsList = elementsList.filter(el => el.id !== eleId);\n            setElemetsList(prevElList => eleId ? newElementsList : prevElList);\n            setCurrentElement(newElementsList[newElementsList.length - 1].id)\n        }\n\n    }\n    const commonProps = {removeElement, addAction, addTransition,addDialogue, addParanthetical, insChar: insertChar, addSceneHeading}\n\n    return <div className=\"board\">\n        {elementsList.map(el => <Elements {...el} {...commonProps} elementRef={el.id === currentElement ? setFocusedElement : null}/>)}\n    </div>\n}\n\nexport default Board;","import React from 'react';\n// import Editor from '../Editor';\n// import Elements from '../Elements';\nimport Board from '../Board'\n// import Charector from '../../components/Charector';\n// import {CHAR} from '../../constants'\nimport './App.css';\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header center\">\n         Script assist\n        </header>\n        <div className=\"App-container\">\n          {/* <Elements onAddElement={this.onAddElement}/> */}\n          {/* <Editor onChange={this.onContentChange} editorRef={this.editor} /> */}\n          <Board/>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}