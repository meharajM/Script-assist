{"version":3,"sources":["components/EditableDiv/index.js","components/SceneHeading/index.js","components/Action/index.js","components/Charector/index.js","constants.js","components/Paranthetical/index.js","components/Dialogue/index.js","components/Transition/index.js","components/ElementOptions/index.js","containers/Elements/index.js","containers/Board/index.js","containers/App/index.js","serviceWorker.js","index.js"],"names":["EditableDiv","props","contentEditable","SceneHeading","className","placeholder","Action","Charector","Paranthetical","Dialogue","Transition","Select","id","MenuItem","value","ElementOptions","show","handleClose","addSceneHeading","addAction","insChar","addDialogue","addParanthetical","addTransition","onSelect","selectedCallBack","Menu","open","onClose","onClick","Element","type","removeElement","useState","setShow","element","onKeyDown","e","content","currentTarget","innerText","trim","key","shiftKey","prevState","preventDefault","length","constants","Board","elements","elementsCount","sceneHeading","action","charector","dialogue","paranthetical","transition","elementsList","setElemetsList","setElemetsListToState","newEle","prevElList","commonProps","eleId","filter","el","parantheticals","map","App","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0fa046b1.chunk.js","sourcesContent":["import React from 'react';\nimport './style.scss'\nfunction EditableDiv(props) {\nreturn <div contentEditable {...props}></div>\n}\nexport default EditableDiv;","import React from 'react';\nimport EditableDiv from '../EditableDiv'\nimport './style.scss';\nfunction SceneHeading(props) {\n    return <div className=\"scene-heading\">\n                \n        <EditableDiv className=\"int-ext\" placeholder=\"INT/EXT\" />\n        <EditableDiv className=\"location\" placeholder=\"LOCATION\"/>\n        <EditableDiv className=\"time\" contentEditable={true} placeholder=\"MORNING/NIGHT\" {...props}></EditableDiv>\n        \n    </div>;\n}\n\nexport default SceneHeading;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Action(props) {\n    return (<div className=\"action\">\n        <EditableDiv placeholder=\"Action\" {...props}/>\n    </div>)\n}\n\nexport default Action;","import React from 'react';\nimport EditableDiv from '../EditableDiv'\nimport './style.scss';\nfunction Charector(props) {\n\n    return <div className=\"charector\">\n        <EditableDiv placeholder=\"Charector name\" {...props}/>\n\n        </div>\n}\n\nexport default Charector;"," const CHARECTOR = \"CHARECTOR\";\n const ACTION = \"ACTION\";\n const PARANTHETICAL = \"PARANTHETICAL\";\n const DIALOGUE = \"DIALOGUE\";\n const SCENE_HEADING = \"SCENE_HEADING\"\n const TRANSITION = \"TRANSITION\"\n export default {\n    CHARECTOR,\n    ACTION,\n    PARANTHETICAL,\n    DIALOGUE,\n    SCENE_HEADING,\n    TRANSITION\n }","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Paranthetical(props) {\n\n    return (<div className=\"paranthetical\">\n        <EditableDiv placeholder=\"describe state of charector\" {...props}/>\n    </div>)\n}\nexport default Paranthetical;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Dialogue(props) {\n\n    return (<div className=\"dialogue\">\n        <EditableDiv placeholder=\"Dialogue\" {...props}/>\n    </div>)\n}\nexport default Dialogue;","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport './style.scss';\nfunction Transition(props) {\n    return <div className=\"transition\">\n        <Select\n          id=\"transition-select\"\n          {...props}\n        >\n          <MenuItem value={'FADEIN'}>FADE IN</MenuItem>\n          <MenuItem value={'FADEOUT'}>FADE OUT</MenuItem>\n          <MenuItem value={\"CUTTO\"}>CUT TO</MenuItem>\n        </Select>\n    </div>\n}\nexport default Transition","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nfunction ElementOptions(props){\n    const {show, handleClose, addSceneHeading, addAction, insChar, addDialogue, addParanthetical, addTransition} = props;\n    const onSelect = (selectedCallBack) => {\n      selectedCallBack();\n      handleClose();\n    }\n    return <Menu\n    id=\"elements-menu\"\n    open={show}\n    onClose={handleClose}\n  >\n    <MenuItem onClick={() => onSelect(addSceneHeading)} >Scene heading</MenuItem>\n    <MenuItem onClick={() => onSelect(addAction)}>Action</MenuItem>\n    <MenuItem onClick={() => onSelect(insChar)} >Charector</MenuItem>\n    <MenuItem onClick={() => onSelect(addDialogue)} >Dialogue</MenuItem>\n    <MenuItem onClick={() => onSelect(addParanthetical)} >Paranthetical</MenuItem>\n    <MenuItem onClick={() => onSelect(addTransition)} >Transition</MenuItem>\n  </Menu>\n}\nexport default ElementOptions;","import React, {useState} from 'react';\nimport PropTypes from 'prop-types'\nimport './style.scss';\nimport SceneHeading from '../../components/SceneHeading';\nimport Action from '../../components/Action';\nimport Charector from '../../components/Charector';\nimport constants from '../../constants';\nimport Paranthetical from '../../components/Paranthetical';\nimport Dialogue from '../../components/Dialogue';\nimport Transition from '../../components/Transition';\nimport ElementOptions from '../../components/ElementOptions';\nfunction Element(props) {\n    const {type, removeElement, id} = props;\n    const [show, setShow] = useState(false);\n    let element = null; \n    const onKeyDown = (e) => {\n        const content = e.currentTarget.innerText.trim();\n        if(e.key === 'Enter' && e.shiftKey) {\n            setShow((prevState) => !prevState)\n            e.preventDefault();\n        } else if(e.key === 'Backspace' && !content.length) {\n            removeElement(id)\n            e.preventDefault();\n        }\n    }   \n    switch(type) {\n        case constants.SCENE_HEADING:\n            element = (<SceneHeading onKeyDown={onKeyDown}/>);\n            break;\n        case constants.ACTION: \n            element = (<Action onKeyDown={onKeyDown}/>);\n            break;\n        case constants.CHARECTOR:\n            element = (<Charector onKeyDown={onKeyDown}/>);\n            break;\n        case constants.PARANTHETICAL:\n            element = (<Paranthetical onKeyDown={onKeyDown}/>);\n            break;\n        case constants.DIALOGUE:\n            element = (<Dialogue onKeyDown={onKeyDown}/>);\n            break;\n        case constants.TRANSITION:\n            element = (<Transition onKeyDown={onKeyDown}/>)\n        default: \n\n    }\n    return <div className=\"element\">\n        {element}\n        <ElementOptions show={show} {...props} handleClose={() => { setShow(false)}}/>\n    </div>\n    \n}\nElement.propTypes = {\n    onAddElement: PropTypes.func.isRequired,\n}\nexport default Element;","import React, {useState} from 'react';\nimport Element from '../Elements'\nimport './style.scss';\nimport constants from '../../constants';\nfunction Board(props) {\n    const {elements} = props;\n    const elementsCount = {\n        sceneHeading: 1,\n        action: 0,\n        charector: 0,\n        dialogue: 0,\n        paranthetical: 0,\n        transition: 0,\n    }\n    const [elementsList, setElemetsList] = useState(elements || [{type: constants.SCENE_HEADING}]);\n\n    const setElemetsListToState = (newEle) => {\n        setElemetsList(prevElList => [...prevElList, newEle] )\n    }\n    const addParanthetical = function () {\n        elementsCount.parantheticals += 1;\n        setElemetsListToState({type: constants.PARANTHETICAL, id: `paranthetical-${elementsCount.parantheticals}`})\n    }\n    const addTransition = () => {\n        elementsCount.transition += 1;\n        setElemetsListToState({type: constants.TRANSITION, id: `transition-${elementsCount.transition}`})\n    }\n    const addDialogue = () => {\n        elementsCount.dialogue += 1;\n        setElemetsListToState({type: constants.DIALOGUE, id: `dialogue-${elementsCount.dialogue}`})\n    }\n    const insertChar = function() {\n        elementsCount.charector += 1;\n        setElemetsListToState({type: constants.CHARECTOR, id: `charector-${elementsCount.charector}`})\n    }\n    const addAction = function() {\n        elementsCount.action += 1;\n        setElemetsListToState({type: constants.ACTION, id: `action-${elementsCount.action}`})\n    }\n    const addSceneHeading = () => {\n        elementsCount.sceneHeading += 1;\n        setElemetsListToState({type: constants.SCENE_HEADING, id: `sceneHeading-${elementsCount.sceneHeading}`})\n    }\n    const removeElement = (eleId) => {\n        setElemetsList(prevElList => prevElList.filter(el => el.id !== eleId))\n    }\n    const commonProps = {removeElement, addAction, addTransition,addDialogue, addParanthetical, insChar: insertChar, addSceneHeading}\n    \n\n    return <div className=\"board\">\n        {elementsList.map(el => <Element {...el} {...commonProps}/>)}\n    </div>\n}\n\nexport default Board;","import React from 'react';\n// import Editor from '../Editor';\n// import Elements from '../Elements';\nimport Board from '../Board'\n// import Charector from '../../components/Charector';\n// import {CHAR} from '../../constants'\nimport './App.css';\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header center\">\n         Script assist\n        </header>\n        <div className=\"App-container\">\n          {/* <Elements onAddElement={this.onAddElement}/> */}\n          {/* <Editor onChange={this.onContentChange} editorRef={this.editor} /> */}\n          <Board/>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}