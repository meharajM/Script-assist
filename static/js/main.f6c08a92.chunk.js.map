{"version":3,"sources":["constants.js","containers/App/elementTypes.js","components/EditableDiv/index.js","contexts/index.js","components/SceneHeading/index.js","components/Action/index.js","components/Charector/index.js","components/Paranthetical/index.js","components/Dialogue/index.js","components/Transition/index.js","components/ElementOptions/index.js","containers/Elements/index.js","containers/Board/index.js","components/Logline/index.js","containers/App/index.js","utils/saveScript.js","utils/isMobile.js","serviceWorker.js","index.js"],"names":["elementsCount","boardId","type","constants","id","parantheticals","transition","dialogue","charector","action","EditableDiv","props","value","elementRef","rest","innerRef","html","tagName","SceneHeading","int_id","location_id","time_id","summary_id","onKeyDownHere","this","content","sceneNumber","onFocus","onKeyDown","className","key","placeholder","onKeyUp","contentEditable","React","Component","Action","Charector","Paranthetical","Dialogue","Transition","ElementOptions","show","handleClose","addSceneHeading","addAction","insChar","addDialogue","addParanthetical","addTransition","onSelect","selectedCallBack","Menu","open","onClose","MenuItem","onClick","Element","setShow","setState","e","removeElement","onContentChange","currentTarget","innerText","fullId","split","currentElement","isEnter","isBackSpace","addElementAction","shiftKey","preventDefault","state","length","toLowerCase","console","log","keyCode","inp","String","fromCharCode","isCharKey","test","elementProps","Board","elements","setElementCount","addBoard","elementsList","setElemetsList","setCurrentElement","currentElementRef","useRef","useEffect","focus","document","execCommand","getSelection","collapseToEnd","setElemetsListToState","newEle","setFocusedElement","element","commonProps","elementTypes","sceneHeading","setContent","map","el","Elements","Option","Select","genreOptions","Typography","Title","subGenreOptions","Logline","setVisible","visible","setFieldValue","path","prev","set","getShortLogline","logline","character","crisis","response","onSave","isEdit","onEdit","theme","genre","subGanre","title","subTitle","column","Item","label","TextField","onChange","ev","target","fullWidth","name","style","width","g","i","s","ghost","extra","size","onOk","onCancel","footer","height","src","frameborder","allow","allowfullscreen","TabPane","Tabs","App","prevState","prevElList","elementsLists","activeBoard","currentElementsList","eleId","newElementsList","filter","undefined","ele","boards","newBoard","note","push","isRemove","scriptContent","delete","newElementsCount","onTabChange","activeKey","newState","result","blob","Blob","fileSaver","saveAs","saveScript","1","Map","toString","tabPosition","hideAdd","board","index","tab","navigator","userAgent","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f6c08a92.chunk.js","sourcesContent":[" const CHARECTOR = \"CHARECTOR\";\n const ACTION = \"ACTION\";\n const PARANTHETICAL = \"PARANTHETICAL\";\n const DIALOGUE = \"DIALOGUE\";\n const SCENE_HEADING = \"SCENE_HEADING\"\n const TRANSITION = \"TRANSITION\"\n const LOGLINE = \"LOGLINE\";\n export default {\n    CHARECTOR,\n    ACTION,\n    PARANTHETICAL,\n    DIALOGUE,\n    SCENE_HEADING,\n    TRANSITION,\n    LOGLINE,\n }","import constants from '../../constants';\nexport default {\n    paranthetical: (elementsCount, boardId) => ({type: constants.PARANTHETICAL, id: `board-${boardId}-paranthetical-${elementsCount.parantheticals}`}),\n    transition: (elementsCount, boardId) => ({type: constants.TRANSITION, id: `board-${boardId}-transition-${elementsCount.transition}`}),\n    dialogue: (elementsCount, boardId) => ({type: constants.DIALOGUE, id: `board-${boardId}-dialogue-${elementsCount.dialogue}`}),\n    charecter: (elementsCount, boardId) => ({type: constants.CHARECTOR, id: `board-${boardId}-character-${elementsCount.charector}`}),\n    action: (elementsCount, boardId) => ({type: constants.ACTION, id: `board-${boardId}-action-${elementsCount.action}`}),\n}","import React from 'react';\nimport ContentEditable from 'react-contenteditable'\nimport './style.scss'\nfunction EditableDiv(props) {\n    const {value, elementRef, ...rest} = props;\n\n    return <ContentEditable\n              innerRef={elementRef}\n              html={`${value || ''}`} // innerHTML of the editable div\n            //   disabled={false}       // use true to disable editing\n            //   onChange={props.onKeyDown} // handle innerHTML change\n              tagName='div'\n              {...rest}\n              />\n//     if (props.value) {\n//     return <div contentEditable {...rest} ref={elementRef}>{value}</div>\n//     }\n// return <div contentEditable {...props} ref={props.elementRef}></div>\n}\nexport default EditableDiv;","import React from 'react';\nconst contexts = {\n\n};\nexport default function setContext(name, value) {\n    if (!contexts[name]) {\n        contexts[name] = React.createContext(value);\n    }\n    return contexts[name];\n};\nexport const getContexts = (name) => contexts[name];","import React, {useState} from 'react';\nimport { AutoComplete, Input } from 'antd';\nimport EditableDiv from '../EditableDiv'\nimport {getContexts} from '../../contexts';\n\nimport './style.scss';\nclass SceneHeading extends React.Component{\n    constructor(props) {\n        super(props);\n        const {id} = props;\n        this.int_id = `${id}-int_ext`;\n        this.location_id = `${id}-location`;\n        this.time_id = `${id}-time`;\n        this.summary_id = `${id}-summary`;\n    }\n\n   render() {\n       const {onKeyDownHere, int_id, location_id, time_id, summary_id} = this;\n       const {content, sceneNumber, elementRef, onFocus, onKeyDown, ...rest} = this.props;\n    return <div>\n        <div className=\"scene-heading-summary-header\">\n            <div className=\"scene-number\">Scene {sceneNumber}: </div><EditableDiv key={summary_id} className=\"scene-heading-summary\" id={summary_id} placeholder=\"  Scene description\" value={content[summary_id]} onKeyDown={onKeyDown}/>\n        </div>\n        <div className=\"scene-heading\">\n            <EditableDiv key={int_id} className=\"int-ext\" placeholder=\"INT/EXT\" elementRef={elementRef} id={int_id} onKeyUp={onKeyDownHere} value={content[int_id]} onFocus={onFocus} onKeyDown={onKeyDown}/>\n            <EditableDiv key={location_id} className=\"location\" placeholder=\"LOCATION\" id={location_id} onKeyUp={onKeyDownHere} value={content[location_id]} onFocus={onFocus} onKeyDown={onKeyDown}/>\n            <EditableDiv key={time_id} className=\"time\" contentEditable={true} placeholder=\"DAY/NIGHT\" {...rest} onKeyUp={onKeyDownHere} id={time_id} value={content[time_id]} onFocus={onFocus} onKeyDown={onKeyDown}></EditableDiv>\n        </div>\n        \n    </div>;\n   }\n   \n}\n\nexport default SceneHeading;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Action(props) {\n    const {content, ...rest} = props;\n    return (<div className=\"action\">\n        <EditableDiv placeholder=\"Action\" value={content[props.id]} {...rest}/>\n    </div>)\n}\n\nexport default Action;","import React from 'react';\nimport EditableDiv from '../EditableDiv'\nimport './style.scss';\nfunction Charector(props) {\n\n    return <div className=\"charector\">\n        <EditableDiv placeholder=\"Character name\" {...props} value={props.content[props.id]}/>\n\n        </div>\n}\n\nexport default Charector;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Paranthetical(props) {\n\n    return (<div className=\"paranthetical\">\n        <EditableDiv placeholder=\"describe state of charector\" {...props} value={props.content[props.id]}/>\n    </div>)\n}\nexport default Paranthetical;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Dialogue(props) {\n\n    return (<div className=\"dialogue\">\n        <div className=\"dialogue-container\">\n            <EditableDiv placeholder=\"Dialogue\" {...props} value={props.content[props.id]}/>\n        </div>\n    </div>)\n}\nexport default Dialogue;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Transition(props) {\n    return <div className=\"transition\">\n        {/* <Select\n          id=\"transition-select\"\n          {...props}\n          ref={props.elementRef}\n        >\n          <MenuItem value={'FADEIN'}>FADE IN</MenuItem>\n          <MenuItem value={'FADEOUT'}>FADE OUT</MenuItem>\n          <MenuItem value={\"CUTTO\"}>CUT TO</MenuItem>\n        </Select> */}\n        <EditableDiv className=\"transition\" contentEditable={true} placeholder=\"FADEIN/FADEOUT/CUTTO\" {...props} value={props.content[props.id]}></EditableDiv>\n\n    </div>\n}\nexport default Transition","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nfunction ElementOptions(props){\n    const {show, handleClose, addSceneHeading, addAction, insChar, addDialogue, addParanthetical, addTransition} = props;\n    const onSelect = (selectedCallBack) => {\n      selectedCallBack();\n      handleClose();\n    }\n    return <Menu\n    id=\"elements-menu\"\n    open={show}\n    onClose={handleClose}\n  >\n    <MenuItem onClick={() => onSelect(addSceneHeading)} >Scene heading</MenuItem>\n    <MenuItem onClick={() => onSelect(addAction)}>Action</MenuItem>\n    <MenuItem onClick={() => onSelect(insChar)} >Character</MenuItem>\n    <MenuItem onClick={() => onSelect(addParanthetical)} >Paranthetical</MenuItem>\n    <MenuItem onClick={() => onSelect(addDialogue)} >Dialogue</MenuItem>\n    <MenuItem onClick={() => onSelect(addTransition)} >Transition</MenuItem>\n  </Menu>\n}\nexport default ElementOptions;","import React, {useState} from 'react';\nimport PropTypes from 'prop-types'\nimport './style.scss';\nimport SceneHeading from '../../components/SceneHeading';\nimport Action from '../../components/Action';\nimport Charector from '../../components/Charector';\nimport constants from '../../constants';\nimport Paranthetical from '../../components/Paranthetical';\nimport Dialogue from '../../components/Dialogue';\nimport Transition from '../../components/Transition';\nimport ElementOptions from '../../components/ElementOptions';\nfunction getAddElementAction(key, isShift, props) {\n    return false; // disabling short cuts\n    // const { addAction, addTransition,addDialogue, addParanthetical, insChar, addSceneHeading} = props;\n    // const action = isShift && key.toLowerCase();\n    // let addElementAction;\n    // switch(action) {\n    //     case 's':\n    //         addElementAction = addSceneHeading;\n    //         break;\n    //     case 'a':\n    //         addElementAction = addAction;\n    //         break;\n    //     case 't':\n    //         addElementAction = addTransition;\n    //         break;\n    //     case 'd':\n    //         addElementAction = addDialogue;\n    //         break;\n    //     case 'p':\n    //         addElementAction = addParanthetical;\n    //         break;\n    //     case 'c':\n    //         addElementAction = insChar;\n    //         break;\n    //     default: \n    //         addElementAction = null;\n    // }\n    // return addElementAction;\n}\nclass Element extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n        }\n    }\n    setShow = (show) => {\n        this.setState({show});\n    }\n    onKeyDown = (e) => {\n        const {removeElement, id, onContentChange} = this.props;\n        let content = e.currentTarget.innerText;\n        const fullId = e.currentTarget.id;\n        const [board, boardId, currentElement, eleId, type] = fullId.split('-');\n        const isEnter = e.key === 'Enter';\n        const isBackSpace = e.key === 'Backspace';\n        const addElementAction = getAddElementAction(e.key, e.shiftKey, this.props);\n        if(addElementAction) {\n            addElementAction();\n            e.preventDefault();\n        } else if(isEnter && e.shiftKey) {\n            this.setShow(!this.state.show)\n            e.preventDefault();\n        } else if(isBackSpace && !content.length) {\n            if(currentElement !== 'sceneHeading' || (currentElement === 'sceneHeading' && type === 'int_ext')) {\n                removeElement(id)\n                e.preventDefault();\n            }  \n        } else if(isEnter && (currentElement === 'character' || currentElement === \"paranthetical\" || currentElement === \"sceneHeading\")) {\n            e.preventDefault();\n        } else {\n                const key = e.key.toLowerCase();\n                console.log(e.keyCode);\n                if(currentElement === 'sceneHeading'){\n                    const inp = String.fromCharCode(e.keyCode);\n                    const isCharKey = /[a-zA-Z0-9-_ ]/.test(inp);\n                    if(type === 'int_ext') {\n                        if(key === 'backspace') {\n                            content = \"\";\n                            e.preventDefault();\n                        } else if((content === 'INT' || content === 'EXT') && isCharKey) {\n                            e.preventDefault();\n                        } else if(key === 'i') {\n                            content = 'INT';\n                            e.preventDefault();\n                        }else if(key === 'e'){\n                            content = 'EXT';\n                            e.preventDefault();\n                        }\n                    } else if(type === 'time') {\n                        if(key === 'backspace') {\n                            content = \"\";\n                            e.preventDefault();\n                        } else if((content === 'DAY' || content === 'NIGHT') && isCharKey) {\n                            e.preventDefault();\n                        } else if(key === 'd') {\n                            content = 'DAY';\n                            e.preventDefault();\n                        }else if(key === 'n'){\n                            content = 'NIGHT'\n                            e.preventDefault();\n                        }\n                    } else if(type === \"location\") {\n                        // onContentChange(location_id, ev.currentTarget.innerText.trim());\n\n                    }\n                } else if(currentElement === 'transition') {\n                    if(key === 'c') {\n                        content = 'CUT TO';\n                    } else if(content === 'fi') {\n                        content = 'FADE IN'\n                    } else if(content === 'fo') {\n                        content = 'FADE OUT';\n                    }\n                } \n                \n            \n            onContentChange(fullId, content)\n        }\n    }   \n\n    render() {\n        const {type, id} = this.props;\n        const {show} = this.state;\n        const elementProps = {onKeyDown: this.onKeyDown}\n        let Element = null; \n\n        switch(type) {\n            case constants.SCENE_HEADING:\n                Element = SceneHeading;\n                break;\n            case constants.ACTION: \n                Element = Action;\n                break;\n            case constants.CHARECTOR:\n                Element = Charector;\n                break;\n            case constants.PARANTHETICAL:\n                Element = Paranthetical;\n                break;\n            case constants.DIALOGUE:\n                Element = Dialogue;\n                break;\n            case constants.TRANSITION:\n                Element = Transition;\n            default: \n\n        }\n        return <div className=\"element\">\n            <Element key={id} {...elementProps} {...this.props}/>\n            <ElementOptions show={show} {...this.props} handleClose={() => { this.setShow(false)}}/>\n        </div>\n    }\n}\nElement.propTypes = {\n    onAddElement: PropTypes.func.isRequired,\n}\nexport default Element;","import React, {useState, useEffect, useRef} from 'react';\nimport Elements from '../Elements'\nimport './style.scss';\nimport constants from '../../constants';\nimport elementTypes from '../App/elementTypes';\nfunction Board(props) {\n    const {elements, content, setElementCount, elementsCount, addBoard, elementsList, setElemetsList, currentElement, setCurrentElement, removeElement, id} = props;\n    let currentElementRef = useRef(null)\n    useEffect(() => {\n        if(currentElementRef && currentElementRef.focus) {\n            currentElementRef.focus();\n            document.execCommand('selectAll', false, null);\n            // collapse selection to the end\n            document.getSelection().collapseToEnd();\n        }\n    })\n\n    const setElemetsListToState = (newEle) => {\n        setElemetsList(newEle);\n        setCurrentElement(newEle.id)\n    }\n    const setFocusedElement = element => {\n        currentElementRef = element;\n    }\n    const addParanthetical = function () {\n        setElemetsListToState(elementTypes.paranthetical(elementsCount, id))\n        setElementCount({parantheticals: elementsCount.parantheticals + 1});\n        \n    }\n    const addTransition = () => {\n        setElemetsListToState(elementTypes.transition(elementsCount, id))\n        setElementCount({ transition: elementsCount.transition + 1});\n    \n    }\n    const addDialogue = () => {\n        setElemetsListToState(elementTypes.dialogue(elementsCount, id))\n        setElementCount({dialogue: elementsCount.dialogue + 1});\n    \n    }\n    const insertChar = function() {\n        setElemetsListToState(elementTypes.charecter(elementsCount, id));\n        setElementCount({ charector: elementsCount.charector + 1});\n\n    }\n    const addAction = function() {\n        setElemetsListToState(elementTypes.action(elementsCount, id))\n        setElementCount({ action: elementsCount.action + 1});\n    }\n    const addSceneHeading = () => {\n       // setElemetsListToState({type: constants.SCENE_HEADING, id: `sceneHeading-${elementsCount.sceneHeading}`, sceneNumber: elementsCount.sceneHeading})\n        setElementCount({ sceneHeading: elementsCount.sceneHeading + 1});\n        addBoard();\n    }\n\n    const onContentChange = (id, content) => {\n        props.setContent(id, content);\n        // setContent((prevContent) => {\n        //     const newContent = {...prevContent};\n        //     newContent[id] = content;\n        //     return newContent;\n        // });\n    }\n    const commonProps = {removeElement, addAction, addTransition,addDialogue, addParanthetical, insChar: insertChar, addSceneHeading, onContentChange, content, onFocus: setCurrentElement}\n\n    return <div className=\"board\">\n        {elementsList.map(el => <Elements {...el} {...commonProps} elementRef={el.id === currentElement ? setFocusedElement : null}/>)}\n    </div>\n}\n\nexport default Board;","import React, {useState} from 'react';\nimport {PageHeader, Descriptions, Select, Typography, Button, Modal} from 'antd';\nimport TextField from '@material-ui/core/TextField';\nimport set from 'lodash/set';\nimport './style.scss';\nconst {Option} = Select;\nconst {Title} = Typography;\nconst genreOptions = ['Action Adventure',\n    'Thriller',\n   'Romantic Comedy',\n    'Horror',\n    'Drama',\n    'Romantic Drama',\n    'Mystery',\n    'Science Fiction',\n    'Horror',\n    'Love Story',\n    'Family',\n    'Fantasy',\n    'Animation',\n    'Western',\n    'Period',\n    'Historical',\n    'Musical'];\nconst subGenreOptions = ['None',\n    'Comedy',\n    'Horror',\n    'Drama',\n    'Thriller',\n    'Family',\n    'Psychological',\n    'Political',\n    'Parody',\n    'Farce',\n    'Slapstick',\n    'Dark',\n    'Epic',\n    'True Story',\n    'Suspense',\n    'Erotic',\n    'Fish-out-of water',\n    'Coming-of-age'];\nclass Logline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            logline: {\n                character: \"\",\n                crisis: \"\",\n                response: \"\",\n            },\n            theme: \"\",\n            genre: genreOptions[0],\n            subGanre: subGenreOptions[0],\n            title: \"\",\n            isEdit: true,\n        }\n    }\n    \n    setVisible = (value) => {\n        this.setState({visible: value})\n    }\n    setFieldValue = (path, value) => {\n        this.setState((prev) => {\n            const newState = set(prev, path, value);\n            debugger\n            return newState\n        });\n    }\n    getShortLogline = () => {\n        const {logline} = this.state;\n        return `${logline.character} ${logline.crisis} ${logline.response}`\n    }\n    onSave = () => {\n        this.setState({isEdit: false})\n    }\n    onEdit = () => {\n        this.setState({isEdit: true})\n    }\n    render() {\n    const {logline, visible, theme, genre, subGanre, title, isEdit} = this.state;\n    const {setVisible, setFieldValue} = this;\n    debugger\n    return (<div className=\"logline-container\">\n        <Button type=\"link\" onClick={() => setVisible(true)}>\n            How to write a logline\n        </Button>\n        {isEdit ? \n            <div className=\"logline-create\">\n            <div>\n                <PageHeader\n                    title={\"1. Your Story Idea\"}\n                    subTitle=\"These three questions will get at the guts of your story. Sentence length is limited - if you find you can't add more letters, use fewer or shorter words.\">\n                        <Descriptions  column={1}>\n                            <Descriptions.Item label=\"a. Your main character (use adjectives, emotional state) who wants x (a basic desire)\">\n                                <TextField value={logline.character} onChange={(ev) => setFieldValue('logline.character', ev.target.value)} fullWidth label=\"....E.g., A shy young suburban boy who wants to be noticed...\"/>\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"b. What CRISIS is he/she/are they facing? Hint: Start with an ACTIVE VERB.\">\n                                <TextField value={logline.crisis} onChange={(ev) => setFieldValue('logline.crisis', ev.target.value)} fullWidth label=\"...... discovers a strange but friendly alien living in his shed...\"/>\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"c. How does he/she/do they respond to try and deal with it? Hint: Not too much detail.\">\n                                <TextField value={logline.response} onChange={(ev) => setFieldValue('logline.response', ev.target.value)} fullWidth label=\"...... and tries to help him get home while keeping his existence a secret. (E.T., The Extra Terrestrial)\"/>\n                            </Descriptions.Item>\n                        </Descriptions>\n                </PageHeader>\n\n                \n            </div>\n            <div>\n            <PageHeader\n                    title={\"2. Your Theme\"}\n                    subTitle={`THEME is what people want to know when they ask that annoying question, \"So what's it about?\"`}\n            >\n                <Descriptions  column={1}>\n                            <Descriptions.Item label=\"Make it a one word answer, as corny as it may sound, like Love, Betrayal, or Prejudice. Philadelphia, for example is a story about prejudice; Star Wars is a story about heroism.\">\n                                <TextField value={theme} onChange={(ev) => setFieldValue('theme', ev.target.value)} fullWidth label=\"Your theme:.....\"/>\n                            </Descriptions.Item>\n                </Descriptions>\n            </PageHeader>\n                \n\n                </div>\n\n                \n            <div>\n            <PageHeader\n                    title={\"3. Your Title\"}\n            >\n                <Descriptions  column={1}>\n                            <Descriptions.Item label=\"Based on your theme, choose a title (for now).\">\n                                <TextField value={title} onChange={(ev) => setFieldValue('title', ev.target.value)} fullWidth label=\"Your title:.........\"/>\n                            </Descriptions.Item>\n                </Descriptions>\n            </PageHeader>\n            </div>\n                <div>\n                <PageHeader\n                    title={\"4. What type of film is it?\"}\n            >\n                <Descriptions  column={1}>\n                    <Descriptions.Item label=\"Genre\">\n                            <Select name=\"Genre\" value={genre} style={{ width: 200 }} onChange={(value) => setFieldValue('genre', value)} >\n                                {genreOptions.map((g,i )=> <Option key={`genre-${i}`} value={g}>{g}</Option>)}\n\t                        </Select>           \n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Sub-Genre\">\n                        <Select name=\"Sub-Genre\" value={subGanre} style={{ width: 200 }} onChange={(value) => setFieldValue('subGanre', value)} >\n                            {subGenreOptions.map((s,i) => <Option key={`sub-genre-${i}`} value={s}>{s}</Option>)}\n                        </Select>\n                    </Descriptions.Item>\n                    <Descriptions.Item>\n                        <Button onClick={this.onSave} type=\"primary\">Save</Button>\n                    </Descriptions.Item>\n                </Descriptions>\n            </PageHeader>\n        </div>\n        \n            {/* <EditableDiv placeholder=\"describe the story\" {...props} value={props.content[props.id]}/> */}\n        </div>\n        : \n            <div className='logline-view'>\n                <PageHeader\n                    ghost={false}\n                    title={title}\n                    extra={[\n                        \n                        <Button key=\"2\">Print</Button>,\n                        <Button key=\"1\" type=\"primary\" onClick={this.onEdit}>\n                        Edit\n                        </Button>,\n                    ]}\n                    >\n            <Descriptions size=\"small\" column={1}>\n                <Descriptions.Item label=\"Logline (elivator pitch)\">\n                    {this.getShortLogline()}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Theme\">\n                    {theme}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Genre\">\n                    {genre}, {subGanre}\n                </Descriptions.Item>\n            </Descriptions>\n            <Descriptions size=\"small\" column={2}>\n                <Descriptions.Item label=\"Writer(s)\">name of user</Descriptions.Item>\n                <Descriptions.Item label=\"Last modified\">2017-01-10</Descriptions.Item>\n                \n            </Descriptions>\n            </PageHeader>\n            </div>\n    }\n    <Modal\n          title=\"How to write log line\"\n          visible={visible}\n          onOk={() => setVisible(false)}\n          onCancel={() => setVisible(false)}\n          width={600}\n          footer={null}\n        >\n                  <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/r0Fj_H9Q73k\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n    </Modal>\n    </div>)\n\n    }\n}\nexport default Logline;","import React from 'react';\nimport { Tabs, Button } from 'antd';\n// import Editor from '../Editor';\n// import Elements from '../Elements';\nimport saveScript from '../../utils/saveScript';\nimport isMobile from '../../utils/isMobile';\nimport elementTypes from './elementTypes';\nimport Board from '../Board'\n// import Charector from '../../components/Charector';\n// import {CHAR} from '../../constants'\nimport constants from '../../constants';\nimport './App.scss';\nimport Logline from '../../components/Logline';\nconst { TabPane } = Tabs;\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const elementsCount = {\n      sceneHeading: 1,\n      action: 0,\n      charector: 0,\n      dialogue: 0,\n      parantheticals: 0,\n      transition: 0,\n  };\n  const elementsLists = {1: [{type: constants.SCENE_HEADING, sceneNumber: elementsCount.sceneHeading, id: `board-${1}-sceneHeading-${elementsCount.sceneHeading}`}]}\n    this.state = {\n      boards: [{id: 'logline', type: constants.LOGLINE, name: 'Logline'}, {id: 1, note: \"\", name: 'Scene-1'}],\n      activeBoard: 1,\n      content: {},\n      scriptContent: new Map(),\n      elementsCount,\n      elementsLists: elementsLists,\n      currentElementsList: elementsLists[1],\n      currentElement: `sceneHeading-${elementsCount.sceneHeading}`,\n    };\n  }\n  setElemetsList = (newEle) => {\n    this.setState(prevState => {\n      const prevElList = {...prevState.elementsLists};\n      prevElList[prevState.activeBoard] = [...prevElList[prevState.activeBoard], newEle]\n      return {...prevState, elementsLists: prevElList, currentElementsList: prevElList[prevState.activeBoard]}\n    });\n  }\n  removeElement = (eleId) => {\n    const {currentElementsList, activeBoard} = this.state;\n    const elementsLists = {...this.state.elementsLists};\n    if(currentElementsList.length > 1 && eleId){\n      const newElementsList = currentElementsList.filter(el => el.id !== eleId);\n      elementsLists[activeBoard] = newElementsList;\n      this.setState({elementsLists, currentElementsList: newElementsList});\n      this.setCurrentElement(newElementsList[newElementsList.length - 1].id);\n      this.setContent(eleId, undefined, true);\n  }\n  }\n  setCurrentElement = (ele) => {\n    this.setState({currentElement: ele});\n  }\n  addBoard = () => {\n    const {elementsCount} = this.state;\n    this.setState((prevState) => {\n      const boards = [...prevState.boards];\n      const newBoard = {id: boards.length + 1, note: \"\", name: `Scene-${boards.length + 1}`};\n      boards.push(newBoard);\n      const elementsLists = {...prevState.elementsLists};\n      elementsLists[newBoard.id] = [{type: constants.SCENE_HEADING, sceneNumber: elementsCount.sceneHeading, id: `board-${newBoard.id}-sceneHeading-${elementsCount.sceneHeading}`}];\n      return {...prevState, boards, activeBoard: newBoard.id, elementsLists, currentElementsList: elementsLists[newBoard.id]} \n    })\n  }\n  setContent = (id, value, isRemove) => {\n    this.setState((prevState) => {\n      const {content, scriptContent} = prevState;\n      if(isRemove) {\n        scriptContent.delete(id);\n        delete content[id];\n      } else {\n        scriptContent.set(id, value);\n        content[id] = value;\n      }\n      return {...prevState, content, scriptContent};\n    })\n  }\n  setElementCount = (element) => {\n    this.setState((prevState) => {\n      const {elementsCount} = prevState;\n      const newElementsCount = {...elementsCount, ...element};\n      return {...prevState, elementsCount: newElementsCount}\n    })\n  }\n  onTabChange = (activeKey) => {\n    const newState = {activeBoard: activeKey};\n    if(activeKey !== \"logline\") {//if not log line page\n      const {elementsLists} = this.state;\n      newState.currentElementsList = elementsLists[activeKey]\n    }\n    this.setState(newState);\n  }\n  onSave = () => {\n    saveScript(this.state.scriptContent);\n  }\n  render() {\n    const {activeBoard, currentElement, elementsCount, currentElementsList} = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header center\">\n         Script assist\n        <div className=\"options\">\n          <Button className=\"save-button\" onClick={this.onSave}>Save</Button>\n        </div>\n        </header>\n        <div className=\"App-container\">\n          {/* <Elements onAddElement={this.onAddElement}/> */}\n          {/* <Editor onChange={this.onContentChange} editorRef={this.editor} /> */}\n          <Tabs activeKey={activeBoard.toString()} className=\"boards\" onChange={this.onTabChange} tabPosition=\"top\" type=\"editable-card\" hideAdd={true}>\n          {this.state.boards.map((board, index) => <TabPane tab={board.name} key={board.id.toString()}>\n            {board.type === constants.LOGLINE ? \n              <Logline \n              content={this.state.content} \n              onChange={(ev) => {\n                const content = ev.target.value;\n                debugger;\n                this.setContent(board.id, content);\n              }} \n\n              id={board.id}\n              />\n            : \n            <Board \n              id={board.id} \n              key={`board-${board.id}`}\n              content={this.state.content} \n              setContent={this.setContent} \n              elementsCount={this.state.elementsCount} \n              setElementCount={this.setElementCount}\n              addBoard={this.addBoard}\n              elementsList={currentElementsList}\n              setElemetsList={this.setElemetsList}\n              currentElement={currentElement}\n              setCurrentElement={this.setCurrentElement}\n              removeElement={this.removeElement}\n            /> }</TabPane>)}\n          </Tabs>\n          \n        </div>\n        <footer>\n          {isMobile() && <div className=\"mobile-footer\">\n            <div className=\"mobile-options\">\n        \n              <Button onClick={() => {\n                this.setElementCount({ sceneHeading: elementsCount.sceneHeading + 1});\n                this.addBoard();\n              }} >Scene heading</Button>\n              <Button onClick={() => {\n                this.setElemetsList(elementTypes.action(elementsCount, activeBoard));\n                this.setElementCount({ action: elementsCount.action + 1});\n              }}>Action</Button>\n              <Button onClick={() => {\n                this.setElemetsList(elementTypes.charecter(elementsCount, activeBoard));\n                this.setElementCount({ charector: elementsCount.charector + 1});\n              }} >Character</Button>\n              <Button onClick={() => {\n                this.setElemetsList(elementTypes.paranthetical(elementsCount, activeBoard));\n                this.setElementCount({parantheticals: elementsCount.parantheticals + 1});\n              }} >Paranthetical</Button>\n              <Button onClick={() => {\n                this.setElemetsList(elementTypes.dialogue(elementsCount, activeBoard));\n                this.setElementCount({dialogue: elementsCount.dialogue + 1});\n\n              }} >Dialogue</Button>\n              <Button onClick={() => {\n                this.setElemetsList(elementTypes.transition(elementsCount, activeBoard));\n                this.setElementCount({ transition: elementsCount.transition + 1});\n\n              }} >Transition</Button>\n            </div>\n            </div>}\n        </footer>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import fileSaver from 'file-saver';\nexport default function(scriptContent) {\n    console.log(scriptContent);\n    let result = \"\";\n    for (let [key, value] of scriptContent) {\n        result = `${result} ${value}`\n    }\n    const blob = new Blob([result], {type: \"text/plain;charset=utf-8\"});\n    fileSaver.saveAs(blob, \"screenplay.txt\");\n}","export default function() {\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    return isMobile;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'; \nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}