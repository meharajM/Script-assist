{"version":3,"sources":["constants.js","containers/App/elementTypes.js","components/EditableDiv/index.js","contexts/index.js","components/SceneHeading/index.js","components/Action/index.js","components/Charector/index.js","components/Paranthetical/index.js","components/Dialogue/index.js","components/Transition/index.js","components/ElementOptions/index.js","containers/Elements/index.js","containers/Board/index.js","components/Logline/index.js","containers/App/index.js","utils/saveScript.js","utils/isMobile.js","serviceWorker.js","index.js"],"names":["elementsCount","type","constants","id","parantheticals","transition","dialogue","charector","action","EditableDiv","props","value","elementRef","rest","innerRef","html","tagName","SceneHeading","int_id","location_id","time_id","summary_id","onKeyDownHere","this","content","sceneNumber","onFocus","onKeyDown","className","key","placeholder","onKeyUp","contentEditable","React","Component","Action","Charector","Paranthetical","Dialogue","Transition","ElementOptions","show","handleClose","addSceneHeading","addAction","insChar","addDialogue","addParanthetical","addTransition","onSelect","selectedCallBack","Menu","open","onClose","MenuItem","onClick","Element","setShow","setState","e","removeElement","onContentChange","currentTarget","innerText","fullId","split","currentElement","isEnter","isBackSpace","addElementAction","isShift","toLowerCase","getAddElementAction","shiftKey","preventDefault","state","length","elementProps","Board","elements","setElementCount","addBoard","elementsList","setElemetsList","setCurrentElement","currentElementRef","useRef","useEffect","focus","document","execCommand","getSelection","collapseToEnd","setElemetsListToState","newEle","setFocusedElement","element","commonProps","elementTypes","sceneHeading","setContent","map","el","Elements","Option","Select","Title","Typography","genre","subGenre","Logline","useState","visible","setVisible","title","subTitle","size","column","Item","label","style","width","name","defaultValue","g","s","level","onOk","onCancel","footer","height","src","frameborder","allow","allowfullscreen","TabPane","Tabs","App","prevState","prevElList","eleId","newElementsList","filter","undefined","ele","boards","newBoard","note","push","activeBoard","isRemove","scriptContent","delete","set","newElementsCount","onTabChange","activeKey","onSave","console","log","result","blob","Blob","fileSaver","saveAs","saveScript","Map","toString","onChange","tabPosition","hideAdd","board","index","tab","ev","target","test","navigator","userAgent","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4d4872c5.chunk.js","sourcesContent":[" const CHARECTOR = \"CHARECTOR\";\n const ACTION = \"ACTION\";\n const PARANTHETICAL = \"PARANTHETICAL\";\n const DIALOGUE = \"DIALOGUE\";\n const SCENE_HEADING = \"SCENE_HEADING\"\n const TRANSITION = \"TRANSITION\"\n const LOGLINE = \"LOGLINE\";\n export default {\n    CHARECTOR,\n    ACTION,\n    PARANTHETICAL,\n    DIALOGUE,\n    SCENE_HEADING,\n    TRANSITION,\n    LOGLINE,\n }","import constants from '../../constants';\nexport default {\n    paranthetical: (elementsCount) => ({type: constants.PARANTHETICAL, id: `paranthetical-${elementsCount.parantheticals}`}),\n    transition: (elementsCount) => ({type: constants.TRANSITION, id: `transition-${elementsCount.transition}`}),\n    dialogue: (elementsCount) => ({type: constants.DIALOGUE, id: `dialogue-${elementsCount.dialogue}`}),\n    charecter: (elementsCount) => ({type: constants.CHARECTOR, id: `character-${elementsCount.charector}`}),\n    action: (elementsCount) => ({type: constants.ACTION, id: `action-${elementsCount.action}`}),\n}","import React from 'react';\nimport ContentEditable from 'react-contenteditable'\nimport './style.scss'\nfunction EditableDiv(props) {\n    const {value, elementRef, ...rest} = props;\n\n    return <ContentEditable\n              innerRef={elementRef}\n              html={`${value || ''}`} // innerHTML of the editable div\n            //   disabled={false}       // use true to disable editing\n            //   onChange={props.onKeyDown} // handle innerHTML change\n              tagName='div'\n              {...rest}\n              />\n//     if (props.value) {\n//     return <div contentEditable {...rest} ref={elementRef}>{value}</div>\n//     }\n// return <div contentEditable {...props} ref={props.elementRef}></div>\n}\nexport default EditableDiv;","import React from 'react';\nconst contexts = {\n\n};\nexport default function setContext(name, value) {\n    if (!contexts[name]) {\n        contexts[name] = React.createContext(value);\n    }\n    return contexts[name];\n};\nexport const getContexts = (name) => contexts[name];","import React, {useState} from 'react';\nimport { AutoComplete, Input } from 'antd';\nimport EditableDiv from '../EditableDiv'\nimport {getContexts} from '../../contexts';\n\nimport './style.scss';\nclass SceneHeading extends React.Component{\n    constructor(props) {\n        super(props);\n        const {id} = props;\n        this.int_id = `${id}-int_ext`;\n        this.location_id = `${id}-location`;\n        this.time_id = `${id}-time`;\n        this.summary_id = `${id}-summary`;\n    }\n\n   render() {\n       const {onKeyDownHere, int_id, location_id, time_id, summary_id} = this;\n       const {content, sceneNumber, elementRef, onFocus, onKeyDown, ...rest} = this.props;\n    return <div>\n        <div className=\"scene-heading-summary-header\">\n            <div className=\"scene-number\">Scene {sceneNumber}: </div><EditableDiv key={summary_id} className=\"scene-heading-summary\" id={summary_id} placeholder=\"  Scene description\" value={content[summary_id]} onKeyDown={onKeyDown}/>\n        </div>\n        <div className=\"scene-heading\">\n            <EditableDiv key={int_id} className=\"int-ext\" placeholder=\"INT/EXT\" elementRef={elementRef} id={int_id} onKeyUp={onKeyDownHere} value={content[int_id]} onFocus={onFocus} onKeyDown={onKeyDown}/>\n            <EditableDiv key={location_id} className=\"location\" placeholder=\"LOCATION\" id={location_id} onKeyUp={onKeyDownHere} value={content[location_id]} onFocus={onFocus} onKeyDown={onKeyDown}/>\n            <EditableDiv key={time_id} className=\"time\" contentEditable={true} placeholder=\"DAY/NIGHT\" {...rest} onKeyUp={onKeyDownHere} id={time_id} value={content[time_id]} onFocus={onFocus} onKeyDown={onKeyDown}></EditableDiv>\n        </div>\n        \n    </div>;\n   }\n   \n}\n\nexport default SceneHeading;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Action(props) {\n    const {content, ...rest} = props;\n    return (<div className=\"action\">\n        <EditableDiv placeholder=\"Action\" value={content[props.id]} {...rest}/>\n    </div>)\n}\n\nexport default Action;","import React from 'react';\nimport EditableDiv from '../EditableDiv'\nimport './style.scss';\nfunction Charector(props) {\n\n    return <div className=\"charector\">\n        <EditableDiv placeholder=\"Character name\" {...props} value={props.content[props.id]}/>\n\n        </div>\n}\n\nexport default Charector;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Paranthetical(props) {\n\n    return (<div className=\"paranthetical\">\n        <EditableDiv placeholder=\"describe state of charector\" {...props} value={props.content[props.id]}/>\n    </div>)\n}\nexport default Paranthetical;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Dialogue(props) {\n\n    return (<div className=\"dialogue\">\n        <div className=\"dialogue-container\">\n            <EditableDiv placeholder=\"Dialogue\" {...props} value={props.content[props.id]}/>\n        </div>\n    </div>)\n}\nexport default Dialogue;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Transition(props) {\n    return <div className=\"transition\">\n        {/* <Select\n          id=\"transition-select\"\n          {...props}\n          ref={props.elementRef}\n        >\n          <MenuItem value={'FADEIN'}>FADE IN</MenuItem>\n          <MenuItem value={'FADEOUT'}>FADE OUT</MenuItem>\n          <MenuItem value={\"CUTTO\"}>CUT TO</MenuItem>\n        </Select> */}\n        <EditableDiv className=\"transition\" contentEditable={true} placeholder=\"FADEIN/FADEOUT/CUTTO\" {...props} value={props.content[props.id]}></EditableDiv>\n\n    </div>\n}\nexport default Transition","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nfunction ElementOptions(props){\n    const {show, handleClose, addSceneHeading, addAction, insChar, addDialogue, addParanthetical, addTransition} = props;\n    const onSelect = (selectedCallBack) => {\n      selectedCallBack();\n      handleClose();\n    }\n    return <Menu\n    id=\"elements-menu\"\n    open={show}\n    onClose={handleClose}\n  >\n    <MenuItem onClick={() => onSelect(addSceneHeading)} >Scene heading</MenuItem>\n    <MenuItem onClick={() => onSelect(addAction)}>Action</MenuItem>\n    <MenuItem onClick={() => onSelect(insChar)} >Character</MenuItem>\n    <MenuItem onClick={() => onSelect(addParanthetical)} >Paranthetical</MenuItem>\n    <MenuItem onClick={() => onSelect(addDialogue)} >Dialogue</MenuItem>\n    <MenuItem onClick={() => onSelect(addTransition)} >Transition</MenuItem>\n  </Menu>\n}\nexport default ElementOptions;","import React, {useState} from 'react';\nimport PropTypes from 'prop-types'\nimport './style.scss';\nimport SceneHeading from '../../components/SceneHeading';\nimport Action from '../../components/Action';\nimport Charector from '../../components/Charector';\nimport constants from '../../constants';\nimport Paranthetical from '../../components/Paranthetical';\nimport Dialogue from '../../components/Dialogue';\nimport Transition from '../../components/Transition';\nimport ElementOptions from '../../components/ElementOptions';\nfunction getAddElementAction(key, isShift, props) {\n    const { addAction, addTransition,addDialogue, addParanthetical, insChar, addSceneHeading} = props;\n    const action = isShift && key.toLowerCase();\n    let addElementAction;\n    switch(action) {\n        case 's':\n            addElementAction = addSceneHeading;\n            break;\n        case 'a':\n            addElementAction = addAction;\n            break;\n        case 't':\n            addElementAction = addTransition;\n            break;\n        case 'd':\n            addElementAction = addDialogue;\n            break;\n        case 'p':\n            addElementAction = addParanthetical;\n            break;\n        case 'c':\n            addElementAction = insChar;\n            break;\n        default: \n            addElementAction = null;\n    }\n    return addElementAction;\n}\nclass Element extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n        }\n    }\n    setShow = (show) => {\n        this.setState({show});\n    }\n    onKeyDown = (e) => {\n        const {removeElement, id, onContentChange} = this.props;\n        let content = e.currentTarget.innerText;\n        const fullId = e.currentTarget.id;\n        const [currentElement, eleId, type] = fullId.split('-');\n        const isEnter = e.key === 'Enter';\n        const isBackSpace = e.key === 'Backspace';\n        const addElementAction = getAddElementAction(e.key, e.shiftKey, this.props);\n        if(addElementAction) {\n            addElementAction();\n            e.preventDefault();\n        } else if(isEnter && e.shiftKey) {\n            this.setShow(!this.state.show)\n            e.preventDefault();\n        } else if(isBackSpace && !content.length) {\n            if(currentElement !== 'sceneHeading' || (currentElement === 'sceneHeading' && type === 'int_ext')) {\n                removeElement(id)\n                e.preventDefault();\n            }  \n        } else if(isEnter && (currentElement === 'character' || currentElement === \"paranthetical\" || currentElement === \"sceneHeading\")) {\n            e.preventDefault();\n        } else {\n                const key = e.key.toLowerCase();\n\n                if(currentElement === 'sceneHeading'){\n                    if(type === 'int_ext') {\n                        if(key === 'i') {\n                            content = 'INT';\n                            e.preventDefault();\n                        }else if(key === 'e'){\n                            content = 'EXT';\n                            e.preventDefault();\n                        }\n                    } else if(type === 'time') {\n                        if(key === 'd') {\n                            content = 'DAY';\n                            e.preventDefault();\n\n                        }else if(key === 'n'){\n                            content = 'NIGHT'\n                            e.preventDefault();\n\n                        }\n                    } else if(type === \"location\") {\n                        // onContentChange(location_id, ev.currentTarget.innerText.trim());\n\n                    }\n                } else if(currentElement === 'transition') {\n                    if(key === 'c') {\n                        content = 'CUT TO';\n                    } else if(content === 'fi') {\n                        content = 'FADE IN'\n                    } else if(content === 'fo') {\n                        content = 'FADE OUT';\n                    }\n                } \n                \n            \n            onContentChange(fullId, content)\n        }\n    }   \n\n    render() {\n        const {type, id} = this.props;\n        const {show} = this.state;\n        const elementProps = {onKeyDown: this.onKeyDown}\n        let Element = null; \n\n        switch(type) {\n            case constants.SCENE_HEADING:\n                Element = SceneHeading;\n                break;\n            case constants.ACTION: \n                Element = Action;\n                break;\n            case constants.CHARECTOR:\n                Element = Charector;\n                break;\n            case constants.PARANTHETICAL:\n                Element = Paranthetical;\n                break;\n            case constants.DIALOGUE:\n                Element = Dialogue;\n                break;\n            case constants.TRANSITION:\n                Element = Transition;\n            default: \n\n        }\n        return <div className=\"element\">\n            <Element key={id} {...elementProps} {...this.props}/>\n            <ElementOptions show={show} {...this.props} handleClose={() => { this.setShow(false)}}/>\n        </div>\n    }\n}\nElement.propTypes = {\n    onAddElement: PropTypes.func.isRequired,\n}\nexport default Element;","import React, {useState, useEffect, useRef} from 'react';\nimport Elements from '../Elements'\nimport './style.scss';\nimport constants from '../../constants';\nimport elementTypes from '../App/elementTypes';\nfunction Board(props) {\n    const {elements, content, setElementCount, elementsCount, addBoard, elementsList, setElemetsList, currentElement, setCurrentElement, removeElement} = props;\n    let currentElementRef = useRef(null)\n    useEffect(() => {\n        if(currentElementRef && currentElementRef.focus) {\n            currentElementRef.focus();\n            document.execCommand('selectAll', false, null);\n            // collapse selection to the end\n            document.getSelection().collapseToEnd();\n        }\n    })\n\n    const setElemetsListToState = (newEle) => {\n        setElemetsList(newEle);\n        setCurrentElement(newEle.id)\n    }\n    const setFocusedElement = element => {\n        currentElementRef = element;\n    }\n    const addParanthetical = function () {\n        setElemetsListToState(elementTypes.paranthetical(elementsCount))\n        setElementCount({parantheticals: elementsCount.parantheticals + 1});\n        \n    }\n    const addTransition = () => {\n        setElemetsListToState(elementTypes.transition(elementsCount))\n        setElementCount({ transition: elementsCount.transition + 1});\n    \n    }\n    const addDialogue = () => {\n        setElemetsListToState(elementTypes.dialogue(elementsCount))\n        setElementCount({dialogue: elementsCount.dialogue + 1});\n    \n    }\n    const insertChar = function() {\n        setElemetsListToState(elementTypes.charecter(elementsCount));\n        setElementCount({ charector: elementsCount.charector + 1});\n\n    }\n    const addAction = function() {\n        setElemetsListToState(elementTypes.action(elementsCount))\n        setElementCount({ action: elementsCount.action + 1});\n    }\n    const addSceneHeading = () => {\n       // setElemetsListToState({type: constants.SCENE_HEADING, id: `sceneHeading-${elementsCount.sceneHeading}`, sceneNumber: elementsCount.sceneHeading})\n        setElementCount({ sceneHeading: elementsCount.sceneHeading + 1});\n        addBoard();\n    }\n\n    const onContentChange = (id, content) => {\n        props.setContent(id, content);\n        // setContent((prevContent) => {\n        //     const newContent = {...prevContent};\n        //     newContent[id] = content;\n        //     return newContent;\n        // });\n    }\n    const commonProps = {removeElement, addAction, addTransition,addDialogue, addParanthetical, insChar: insertChar, addSceneHeading, onContentChange, content, onFocus: setCurrentElement}\n\n    return <div className=\"board\">\n        {elementsList.map(el => <Elements {...el} {...commonProps} elementRef={el.id === currentElement ? setFocusedElement : null}/>)}\n    </div>\n}\n\nexport default Board;","import React, {useState} from 'react';\nimport {PageHeader, Descriptions, Input, Select, Typography, Button, Modal} from 'antd';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nconst {Option} = Select;\nconst {Title} = Typography;\nconst genre = ['Action Adventure',\n    'Thriller',\n   'Romantic Comedy',\n    'Horror',\n    'Drama',\n    'Romantic Drama',\n    'Mystery',\n    'Science Fiction',\n    'Horror',\n    'Love Story',\n    'Family',\n    'Fantasy',\n    'Animation',\n    'Western',\n    'Period',\n    'Historical',\n    'Musical'];\nconst subGenre = ['None',\n    'Comedy',\n    'Horror',\n    'Drama',\n    'Thriller',\n    'Family',\n    'Psychological',\n    'Political',\n    'Parody',\n    'Farce',\n    'Slapstick',\n    'Dark',\n    'Epic',\n    'True Story',\n    'Suspense',\n    'Erotic',\n    'Fish-out-of water',\n    'Coming-of-age'];\nfunction Logline(props) {\n    const [visible, setVisible] = useState(false);\n    return (<div className=\"logline-container\">\n        <Button type=\"link\" onClick={() => setVisible(true)}>\n            How to write a logline\n        </Button>\n        <div className=\"logline\">\n            <div>\n                <PageHeader\n                    title={\"1. Your Story Idea\"}\n                    subTitle=\"These three questions will get at the guts of your story. Sentence length is limited - if you find you can't add more letters, use fewer or shorter words.\">\n                        <Descriptions size=\"small\" column={1}>\n                            <Descriptions.Item label=\"a. Your main character (use adjectives, emotional state) who wants x (a basic desire)\">\n                                <Input style={{width: '100%'}} placeholder=\"....E.g., A shy young suburban boy who wants to be noticed...\"/>\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"b. What CRISIS is he/she/are they facing? Hint: Start with an ACTIVE VERB.\">\n                                <Input placeholder=\"...... discovers a strange but friendly alien living in his shed...\"/>\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"c. How does he/she/do they respond to try and deal with it? Hint: Not too much detail.\">\n                                <Input placeholder=\"...... and tries to help him get home while keeping his existence a secret. (E.T., The Extra Terrestrial)\"/>\n                            </Descriptions.Item>\n                        </Descriptions>\n                </PageHeader>\n\n                \n            </div>\n            <div>\n            <PageHeader\n                    title={\"2. Your Theme\"}\n                    subTitle={`THEME is what people want to know when they ask that annoying question, \"So what's it about?\"`}\n            >\n                <Descriptions size=\"small\" column={1}>\n                            <Descriptions.Item label=\"Make it a one word answer, as corny as it may sound, like Love, Betrayal, or Prejudice. Philadelphia, for example is a story about prejudice; Star Wars is a story about heroism.\">\n                                <Input placeholder=\"Your theme:.....\"/>\n                            </Descriptions.Item>\n                </Descriptions>\n            </PageHeader>\n                \n\n                </div>\n\n                \n            <div>\n            <PageHeader\n                    title={\"3. Your Title\"}\n            >\n                <Descriptions size=\"small\" column={1}>\n                            <Descriptions.Item label=\"Based on your theme, choose a title (for now).\">\n                                <Input placeholder=\"Your title:.........\"/>\n                            </Descriptions.Item>\n                </Descriptions>\n            </PageHeader>\n            </div>\n                <div>\n                <PageHeader\n                    title={\"4. What type of film is it?\"}\n            >\n                <Descriptions size=\"small\" column={1}>\n                    <Descriptions.Item label=\"Genre\">\n                            <Select name=\"Genre\" defaultValue={genre[0]} style={{ width: 200 }} >\n                                {genre.map(g => <Option value={g}>{g}</Option>)}\n\t                        </Select>           \n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Sub-Genre\">\n                        <Select name=\"Sub-Genre\" defaultValue={subGenre[0]} style={{ width: 200 }}>\n                            {subGenre.map(s => <Option value={s}>{s}</Option>)}\n                        </Select>\n                    </Descriptions.Item>\n\n                </Descriptions>\n            </PageHeader>\n        </div>\n        <Title level={4}>Now put the three answers together as a sentence, and you have your logline! You will probably have to work on it some more.</Title>\n        <Modal\n          title=\"How to write log line\"\n          visible={visible}\n          onOk={() => setVisible(false)}\n          onCancel={() => setVisible(false)}\n          width={600}\n          footer={null}\n        >\n                  <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/r0Fj_H9Q73k\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n        </Modal>\n            {/* <EditableDiv placeholder=\"describe the story\" {...props} value={props.content[props.id]}/> */}\n        </div>\n    </div>)\n}\nexport default Logline;","import React from 'react';\nimport { Tabs, Button } from 'antd';\n// import Editor from '../Editor';\n// import Elements from '../Elements';\nimport saveScript from '../../utils/saveScript';\nimport isMobile from '../../utils/isMobile';\nimport elementTypes from './elementTypes';\nimport Board from '../Board'\n// import Charector from '../../components/Charector';\n// import {CHAR} from '../../constants'\nimport constants from '../../constants';\nimport './App.scss';\nimport Logline from '../../components/Logline';\nconst { TabPane } = Tabs;\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const elementsCount = {\n      sceneHeading: 1,\n      action: 0,\n      charector: 0,\n      dialogue: 0,\n      parantheticals: 0,\n      transition: 0,\n  };\n    this.state = {\n      boards: [{id: 'logline', type: constants.LOGLINE, name: 'Logline'}, {id: 1, note: \"\", name: 'Scene-1'}],\n      activeBoard: 1,\n      content: {},\n      scriptContent: new Map(),\n      elementsCount,\n      elementsList: [{type: constants.SCENE_HEADING, sceneNumber: elementsCount.sceneHeading, id: `sceneHeading-${elementsCount.sceneHeading}`}],\n      currentElement: `sceneHeading-${elementsCount.sceneHeading}`,\n    };\n  }\n  setElemetsList = (newEle) => {\n    this.setState(prevState => {\n      const prevElList = prevState.elementsList;\n      return {...prevState, elementsList: [...prevElList, newEle]}\n    });\n  }\n  removeElement = (eleId) => {\n    const {elementsList} = this.state;\n    if(elementsList.length > 1 && eleId){\n      const newElementsList = elementsList.filter(el => el.id !== eleId);\n      this.setState({elementsList: newElementsList});\n      this.setCurrentElement(newElementsList[newElementsList.length - 1].id);\n      this.setContent(eleId, undefined, true);\n  }\n  }\n  setCurrentElement = (ele) => {\n    this.setState({currentElement: ele});\n  }\n  addBoard = () => {\n    this.setState((prevState) => {\n      const boards = [...prevState.boards];\n      const newBoard = {id: boards.length + 1, note: \"\", name: `Scene-${boards.length + 1}`};\n      boards.push(newBoard);\n      return {...prevState, boards, activeBoard: newBoard.id} \n    })\n  }\n  setContent = (id, value, isRemove) => {\n    this.setState((prevState) => {\n      const {content, scriptContent} = prevState;\n      if(isRemove) {\n        scriptContent.delete(id);\n        delete content[id];\n      } else {\n        scriptContent.set(id, value);\n        content[id] = value;\n      }\n      return {...prevState, content, scriptContent};\n    })\n  }\n  setElementCount = (element) => {\n    this.setState((prevState) => {\n      const {elementsCount} = prevState;\n      const newElementsCount = {...elementsCount, ...element};\n      return {...prevState, elementsCount: newElementsCount}\n    })\n  }\n  onTabChange = (activeKey) => {\n    this.setState({activeBoard: activeKey})\n  }\n  onSave = () => {\n    saveScript(this.state.scriptContent);\n  }\n  render() {\n    const {activeBoard, currentElement, elementsCount} = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header center\">\n         Script assist\n        <div className=\"options\">\n          <Button className=\"save-button\" onClick={this.onSave}>Save</Button>\n        </div>\n        </header>\n        <div className=\"App-container\">\n          {/* <Elements onAddElement={this.onAddElement}/> */}\n          {/* <Editor onChange={this.onContentChange} editorRef={this.editor} /> */}\n          <Tabs activeKey={activeBoard.toString()} className=\"boards\" onChange={this.onTabChange} tabPosition=\"top\" type=\"editable-card\" hideAdd={true}>\n          {this.state.boards.map((board, index) => <TabPane tab={board.name} key={board.id.toString()}>\n            {board.type === constants.LOGLINE ? \n              <Logline \n              content={this.state.content} \n              onChange={(ev) => {\n                const content = ev.target.value;\n                debugger;\n                this.setContent(board.id, content);\n              }} \n\n              id={board.id}\n              />\n            : \n            <Board \n              id={board.id} \n              content={this.state.content} \n              setContent={this.setContent} \n              elementsCount={this.state.elementsCount} \n              setElementCount={this.setElementCount}\n              addBoard={this.addBoard}\n              elementsList={this.state.elementsList}\n              setElemetsList={this.setElemetsList}\n              currentElement={currentElement}\n              setCurrentElement={this.setCurrentElement}\n              removeElement={this.removeElement}\n            /> }</TabPane>)}\n          </Tabs>\n          \n        </div>\n        <footer>\n          {isMobile() && <div className=\"mobile-footer\">\n            <div className=\"mobile-options\">\n        \n              <Button onClick={() => {\n                this.setElementCount({ sceneHeading: elementsCount.sceneHeading + 1});\n                this.addBoard();\n              }} >Scene heading</Button>\n              <Button onClick={() => {\n                this.setElemetsList(elementTypes.action(elementsCount));\n                this.setElementCount({ action: elementsCount.action + 1});\n              }}>Action</Button>\n              <Button onClick={() => {\n                this.setElemetsList(elementTypes.charecter(elementsCount));\n                this.setElementCount({ charector: elementsCount.charector + 1});\n              }} >Character</Button>\n              <Button onClick={() => {\n                this.setElemetsList(elementTypes.paranthetical(elementsCount));\n                this.setElementCount({parantheticals: elementsCount.parantheticals + 1});\n              }} >Paranthetical</Button>\n              <Button onClick={() => {\n                this.setElemetsList(elementTypes.dialogue(elementsCount));\n                this.setElementCount({dialogue: elementsCount.dialogue + 1});\n\n              }} >Dialogue</Button>\n              <Button onClick={() => {\n                this.setElemetsList(elementTypes.transition(elementsCount));\n                this.setElementCount({ transition: elementsCount.transition + 1});\n\n              }} >Transition</Button>\n            </div>\n            </div>}\n        </footer>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import fileSaver from 'file-saver';\nexport default function(scriptContent) {\n    console.log(scriptContent);\n    let result = \"\";\n    for (let [key, value] of scriptContent) {\n        result = `${result} ${value}`\n    }\n    const blob = new Blob([result], {type: \"text/plain;charset=utf-8\"});\n    fileSaver.saveAs(blob, \"screenplay.txt\");\n}","export default function() {\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    return isMobile;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'; \nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}