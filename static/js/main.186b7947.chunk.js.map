{"version":3,"sources":["components/EditableDiv/index.js","components/SceneHeading/index.js","components/Action/index.js","components/Charector/index.js","constants.js","components/Paranthetical/index.js","components/Dialogue/index.js","components/Transition/index.js","components/ElementOptions/index.js","containers/Elements/index.js","containers/Board/index.js","containers/App/index.js","serviceWorker.js","index.js"],"names":["EditableDiv","props","value","elementRef","rest","contentEditable","ref","SceneHeading","id","onKeyDown","useState","intValue","setIntValues","timeValue","setTimeValues","setLocationValues","onKeyUp","ev","content","currentTarget","innerText","trim","split","currentElement","type","toLowerCase","int_id","location_id","time_id","className","sceneNumber","key","placeholder","Action","Charector","Paranthetical","Dialogue","Transition","ElementOptions","show","handleClose","addSceneHeading","addAction","insChar","addDialogue","addParanthetical","addTransition","onSelect","selectedCallBack","Menu","open","onClose","MenuItem","onClick","Element","removeElement","setShow","elementProps","e","isEnter","isBackSpace","addElementAction","isShift","getAddElementAction","shiftKey","preventDefault","prevState","length","constants","Board","elements","elementsCount","sceneHeading","action","charector","dialogue","paranthetical","transition","elementsList","setElemetsList","setCurrentElement","currentElementRef","useRef","useEffect","focus","document","execCommand","getSelection","collapseToEnd","setElemetsListToState","newEle","prevElList","setFocusedElement","element","commonProps","eleId","newElementsList","filter","el","parantheticals","map","Elements","App","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.186b7947.chunk.js","sourcesContent":["import React from 'react';\nimport './style.scss'\nfunction EditableDiv(props) {\n    if (props.value) {\n        const {value, elementRef, ...rest} = props;\n    return <div contentEditable {...rest} ref={elementRef}>{value}</div>\n    }\nreturn <div contentEditable {...props} ref={props.elementRef}></div>\n}\nexport default EditableDiv;","import React, {useState} from 'react';\nimport { AutoComplete, Input } from 'antd';\nimport EditableDiv from '../EditableDiv'\nimport {getContexts} from '../../contexts';\n\nimport './style.scss';\nfunction SceneHeading(props) {\n    const {elementRef, id, onKeyDown, ...rest} = props;\n\n    const [intValue, setIntValues] = useState('');\n    const [timeValue, setTimeValues] = useState('');\n    const [locationValue, setLocationValues] = useState('');\n    \n    const onKeyUp = (ev) => {\n        let content = ev.currentTarget.innerText.trim();\n        const fullId = ev.currentTarget.id;\n        const [currentElement, eleId, type] = ev.currentTarget.id.split('-');\n        if(currentElement === 'sceneHeading' && type === 'int_ext') {\n            if(content.toLowerCase() === 'i') {\n                content = 'INT';\n            }else if(content.toLowerCase() === 'e'){\n                content = 'EXT'\n            }else {\n                content = ''\n            }\n            setIntValues(content);\n        }\n        if(currentElement === 'sceneHeading' && type === 'time') {\n            if(content.toLowerCase() === 'd') {\n                content = 'DAY';\n            }else if(content.toLowerCase() === 'n'){\n                content = 'NIGHT'\n            }else {\n                content = ''\n            }\n            setTimeValues(content);\n        } else {\n            setLocationValues(content)\n        }\n        \n    }\n\n\n    const int_id = `${id}-int_ext`;\n    const location_id = `${id}-location`;\n    const time_id = `${id}-time`;\n    return <div className=\"scene-heading\">\n        <span className=\"scene-number\">Scene {props.sceneNumber}: </span>\n        <EditableDiv key={int_id} className=\"int-ext\" placeholder=\"INT/EXT\" elementRef={elementRef} id={int_id} onKeyDown={onKeyDown} onKeyUp={onKeyUp} value={intValue} />\n        <EditableDiv key={location_id} className=\"location\" placeholder=\"LOCATION\" id={location_id} onKeyDown={onKeyDown} onKeyUp={onKeyUp}/>\n        <EditableDiv key={time_id} className=\"time\" contentEditable={true} placeholder=\"DAY/NIGHT\" {...rest} onKeyDown={onKeyDown} onKeyUp={onKeyUp} id={time_id} value={timeValue}></EditableDiv>\n        \n    </div>;\n}\n\nexport default SceneHeading;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Action(props) {\n    return (<div className=\"action\">\n        <EditableDiv placeholder=\"Action\" {...props}/>\n    </div>)\n}\n\nexport default Action;","import React from 'react';\nimport EditableDiv from '../EditableDiv'\nimport './style.scss';\nfunction Charector(props) {\n\n    return <div className=\"charector\">\n        <EditableDiv placeholder=\"Character name\" {...props}/>\n\n        </div>\n}\n\nexport default Charector;"," const CHARECTOR = \"CHARECTOR\";\n const ACTION = \"ACTION\";\n const PARANTHETICAL = \"PARANTHETICAL\";\n const DIALOGUE = \"DIALOGUE\";\n const SCENE_HEADING = \"SCENE_HEADING\"\n const TRANSITION = \"TRANSITION\"\n export default {\n    CHARECTOR,\n    ACTION,\n    PARANTHETICAL,\n    DIALOGUE,\n    SCENE_HEADING,\n    TRANSITION\n }","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Paranthetical(props) {\n\n    return (<div className=\"paranthetical\">\n        <EditableDiv placeholder=\"describe state of charector\" {...props}/>\n    </div>)\n}\nexport default Paranthetical;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Dialogue(props) {\n\n    return (<div className=\"dialogue\">\n        <div className=\"dialogue-container\">\n            <EditableDiv placeholder=\"Dialogue\" {...props}/>\n        </div>\n    </div>)\n}\nexport default Dialogue;","import React from 'react';\nimport EditableDiv from '../EditableDiv';\nimport './style.scss';\nfunction Transition(props) {\n    return <div className=\"transition\">\n        {/* <Select\n          id=\"transition-select\"\n          {...props}\n          ref={props.elementRef}\n        >\n          <MenuItem value={'FADEIN'}>FADE IN</MenuItem>\n          <MenuItem value={'FADEOUT'}>FADE OUT</MenuItem>\n          <MenuItem value={\"CUTTO\"}>CUT TO</MenuItem>\n        </Select> */}\n        <EditableDiv className=\"transition\" contentEditable={true} placeholder=\"FADEIN/FADEOUT/CUTTO\" {...props}></EditableDiv>\n\n    </div>\n}\nexport default Transition","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nfunction ElementOptions(props){\n    const {show, handleClose, addSceneHeading, addAction, insChar, addDialogue, addParanthetical, addTransition} = props;\n    const onSelect = (selectedCallBack) => {\n      selectedCallBack();\n      handleClose();\n    }\n    return <Menu\n    id=\"elements-menu\"\n    open={show}\n    onClose={handleClose}\n  >\n    <MenuItem onClick={() => onSelect(addSceneHeading)} >Scene heading</MenuItem>\n    <MenuItem onClick={() => onSelect(addAction)}>Action</MenuItem>\n    <MenuItem onClick={() => onSelect(insChar)} >Character</MenuItem>\n    <MenuItem onClick={() => onSelect(addDialogue)} >Dialogue</MenuItem>\n    <MenuItem onClick={() => onSelect(addParanthetical)} >Paranthetical</MenuItem>\n    <MenuItem onClick={() => onSelect(addTransition)} >Transition</MenuItem>\n  </Menu>\n}\nexport default ElementOptions;","import React, {useState} from 'react';\nimport PropTypes from 'prop-types'\nimport './style.scss';\nimport SceneHeading from '../../components/SceneHeading';\nimport Action from '../../components/Action';\nimport Charector from '../../components/Charector';\nimport constants from '../../constants';\nimport Paranthetical from '../../components/Paranthetical';\nimport Dialogue from '../../components/Dialogue';\nimport Transition from '../../components/Transition';\nimport ElementOptions from '../../components/ElementOptions';\nfunction getAddElementAction(key, isShift, props) {\n    const { addAction, addTransition,addDialogue, addParanthetical, insChar, addSceneHeading} = props;\n    const action = isShift && key.toLowerCase();\n    let addElementAction;\n    switch(action) {\n        case 's':\n            addElementAction = addSceneHeading;\n            break;\n        case 'a':\n            addElementAction = addAction;\n            break;\n        case 't':\n            addElementAction = addTransition;\n            break;\n        case 'd':\n            addElementAction = addDialogue;\n            break;\n        case 'p':\n            addElementAction = addParanthetical;\n            break;\n        case 'c':\n            addElementAction = insChar;\n            break;\n        default: \n            addElementAction = null;\n    }\n    return addElementAction;\n}\nfunction Element(props) {\n    const {type, removeElement, id} = props;\n    const [show, setShow] = useState(false);\n    let Element = null; \n    const onKeyDown = (e) => {\n        const content = e.currentTarget.innerText.trim();\n        const [currentElement, eleId, type] = e.currentTarget.id.split('-');\n        const isEnter = e.key === 'Enter';\n        const isBackSpace = e.key === 'Backspace';\n        const addElementAction = getAddElementAction(e.key, e.shiftKey, props);\n        if(addElementAction) {\n            addElementAction();\n            e.preventDefault();\n        } else if(isEnter && e.shiftKey) {\n            setShow((prevState) => !prevState)\n            e.preventDefault();\n        } else if(isBackSpace && !content.length) {\n            if(currentElement !== 'sceneHeading' || (currentElement === 'sceneHeading' && type === 'int_ext')) {\n                removeElement(id)\n                e.preventDefault();\n            }  \n        } else if(isEnter && (currentElement === 'character' || currentElement === \"paranthetical\" || currentElement === \"sceneHeading\")) {\n            e.preventDefault();\n        }\n    }   \n    const elementProps = {onKeyDown}\n    switch(type) {\n        case constants.SCENE_HEADING:\n            Element = SceneHeading;\n            break;\n        case constants.ACTION: \n            Element = Action;\n            break;\n        case constants.CHARECTOR:\n            Element = Charector;\n            break;\n        case constants.PARANTHETICAL:\n            Element = Paranthetical;\n            break;\n        case constants.DIALOGUE:\n            Element = Dialogue;\n            break;\n        case constants.TRANSITION:\n            Element = Transition;\n        default: \n\n    }\n    return <div className=\"element\">\n        <Element {...elementProps} {...props}/>\n        <ElementOptions show={show} {...props} handleClose={() => { setShow(false)}}/>\n    </div>\n    \n}\nElement.propTypes = {\n    onAddElement: PropTypes.func.isRequired,\n}\nexport default Element;","import React, {useState, useEffect, useRef} from 'react';\nimport Elements from '../Elements'\nimport './style.scss';\nimport constants from '../../constants';\nfunction Board(props) {\n    const {elements} = props;\n    const elementsCount = {\n        sceneHeading: 1,\n        action: 0,\n        charector: 0,\n        dialogue: 0,\n        paranthetical: 0,\n        transition: 0,\n    }\n    const [elementsList, setElemetsList] = useState(elements || [{type: constants.SCENE_HEADING, sceneNumber: elementsCount.sceneHeading, id: `sceneHeading-${elementsCount.sceneHeading}`}]);\n    const [currentElement, setCurrentElement] = useState(`sceneHeading-${elementsCount.sceneHeading}`)\n    let currentElementRef = useRef(null)\n\n    useEffect(() => {\n        if(currentElementRef && currentElementRef.focus) {\n            currentElementRef.focus();\n            document.execCommand('selectAll', false, null);\n            // collapse selection to the end\n            document.getSelection().collapseToEnd();\n        }\n    })\n\n    const setElemetsListToState = (newEle) => {\n        setElemetsList(prevElList => [...prevElList, newEle] )\n        setCurrentElement(newEle.id)\n    }\n    const setFocusedElement = element => {\n        currentElementRef = element;\n    }\n    const addParanthetical = function () {\n        elementsCount.parantheticals += 1;\n        setElemetsListToState({type: constants.PARANTHETICAL, id: `paranthetical-${elementsCount.parantheticals}`})\n    }\n    const addTransition = () => {\n        elementsCount.transition += 1;\n        setElemetsListToState({type: constants.TRANSITION, id: `transition-${elementsCount.transition}`})\n    }\n    const addDialogue = () => {\n        elementsCount.dialogue += 1;\n        setElemetsListToState({type: constants.DIALOGUE, id: `dialogue-${elementsCount.dialogue}`})\n    }\n    const insertChar = function() {\n        elementsCount.charector += 1;\n        setElemetsListToState({type: constants.CHARECTOR, id: `character-${elementsCount.charector}`})\n    }\n    const addAction = function() {\n        elementsCount.action += 1;\n        setElemetsListToState({type: constants.ACTION, id: `action-${elementsCount.action}`})\n    }\n    const addSceneHeading = () => {\n        elementsCount.sceneHeading += 1;\n        setElemetsListToState({type: constants.SCENE_HEADING, id: `sceneHeading-${elementsCount.sceneHeading}`, sceneNumber: elementsCount.sceneHeading})\n    }\n    const removeElement = (eleId) => {\n        if(elementsList.length > 1 && eleId){\n            const newElementsList = elementsList.filter(el => el.id !== eleId);\n            setElemetsList(prevElList => eleId ? newElementsList : prevElList);\n            setCurrentElement(newElementsList[newElementsList.length - 1].id)\n        }\n\n    }\n    const commonProps = {removeElement, addAction, addTransition,addDialogue, addParanthetical, insChar: insertChar, addSceneHeading}\n\n    return <div className=\"board\">\n        {elementsList.map(el => <Elements {...el} {...commonProps} elementRef={el.id === currentElement ? setFocusedElement : null}/>)}\n    </div>\n}\n\nexport default Board;","import React from 'react';\n// import Editor from '../Editor';\n// import Elements from '../Elements';\nimport Board from '../Board'\n// import Charector from '../../components/Charector';\n// import {CHAR} from '../../constants'\nimport './App.css';\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header center\">\n         Script assist\n        </header>\n        <div className=\"App-container\">\n          {/* <Elements onAddElement={this.onAddElement}/> */}\n          {/* <Editor onChange={this.onContentChange} editorRef={this.editor} /> */}\n          <Board/>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'; \nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}